name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Weekly scan

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3.23.2
        with:
          languages: javascript, typescript

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3.23.2
        with:
          category: '/language:javascript'

  dependency-scan:
    name: Dependency Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@0.5.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN || '' }}
        with:
          args: --severity-threshold=high

      - name: Dependency Review
        uses: actions/dependency-review-action@v4.1.3

      - name: npm audit
        run: npm audit --production

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Detect secrets in repository
        uses: gitleaks/gitleaks-action@v2.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE || '' }}

  penetration-test:
    name: Penetration Test
    runs-on: ubuntu-latest
    needs: [analyze, dependency-scan]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Start server
        run: pnpm start &

      - name: Wait for server startup
        run: sleep 5

      - name: Run OWASP ZAP scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
