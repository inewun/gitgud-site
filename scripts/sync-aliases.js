#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–ª–∏–∞—Å–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∞–ª–∏–∞—Å–æ–≤ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 */

const fs = require('fs');
const path = require('path');
const minimist = require('minimist');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = minimist(process.argv.slice(2));
const shouldFix = args.fix || false;

// –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
const ROOT_DIR = path.resolve(__dirname, '..');

// –°–ø–∏—Å–æ–∫ –∞–ª–∏–∞—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const EXPECTED_ALIASES = [
  { name: '@/*', path: './src/*' },
  { name: '@/app/*', path: './src/app/*' },
  { name: '@/widgets/*', path: './src/widgets/*' },
  { name: '@/features/*', path: './src/features/*' },
  { name: '@/entities/*', path: './src/entities/*' },
  { name: '@/shared/*', path: './src/shared/*' },
  { name: '@/domain/*', path: './src/domain/*' },
  { name: '@/styles/*', path: './src/styles/*' },
  { name: '@/lib/*', path: './src/lib/*' },
  { name: '@/pages/*', path: './src/pages/*' },
  { name: '@/public/*', path: './public/*' },
  { name: '@/test/*', path: './__tests__/*' },
  { name: '@/e2e/*', path: './e2e/*' },
  { name: '@/storybook/*', path: './node_modules/@storybook/*' },
  { name: '@/testing-library/*', path: './node_modules/@testing-library/*' },
  { name: '@/playwright/*', path: './node_modules/@playwright/*' },
  { name: '@/axe-core/*', path: './node_modules/@axe-core/*' },
  { name: '@/heroicons/*', path: './node_modules/@heroicons/*' },
  { name: '@/tailwindcss/*', path: './node_modules/@tailwindcss/*' },
  { name: '@/formatjs/*', path: './node_modules/@formatjs/*' },
  { name: '@/trpc/*', path: './node_modules/@trpc/*' },
  { name: '@/jest/*', path: './node_modules/@jest/*' },
  { name: '@/sentry/*', path: './node_modules/@sentry/*' },
  { name: '@/hookform/*', path: './node_modules/@hookform/*' },
  { name: '@/reduxjs/*', path: './node_modules/@reduxjs/*' },
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ tsconfig.json
function checkTsConfig() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–ª–∏–∞—Å–æ–≤ –≤ tsconfig.json...');

  const tsConfigPath = path.join(ROOT_DIR, 'tsconfig.json');

  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const tsConfigContent = fs.readFileSync(tsConfigPath, 'utf8');
    const tsConfig = JSON.parse(tsConfigContent);

    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ paths, —Å–æ–∑–¥–∞–µ–º –µ—ë
    if (!tsConfig.compilerOptions) {
      tsConfig.compilerOptions = {};
    }

    if (!tsConfig.compilerOptions.paths) {
      tsConfig.compilerOptions.paths = {};
    }

    let hasChanges = false;
    const paths = tsConfig.compilerOptions.paths;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –æ–∂–∏–¥–∞–µ–º—ã–π –∞–ª–∏–∞—Å
    for (const alias of EXPECTED_ALIASES) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∞–ª–∏–∞—Å–∞
      const hasCorrectAlias =
        paths[alias.name] &&
        Array.isArray(paths[alias.name]) &&
        paths[alias.name].includes(alias.path);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ—á–Ω–æ–≥–æ –∞–ª–∏–∞—Å–∞ (–±–µ–∑ —Å–ª–µ—à–∞ –ø–æ—Å–ª–µ @)
      const wrongAlias = alias.name.replace('@/', '@');
      const hasWrongAlias = paths[wrongAlias] !== undefined;

      if (!hasCorrectAlias || hasWrongAlias) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–ª–∏–∞—Å–æ–º ${alias.name} –≤ tsconfig.json`);

        if (shouldFix) {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–ª–∏–∞—Å
          paths[alias.name] = [alias.path];

          // –£–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–ª–∏–∞—Å, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if (hasWrongAlias) {
            delete paths[wrongAlias];
          }

          hasChanges = true;
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ baseUrl
    if (!tsConfig.compilerOptions.baseUrl || tsConfig.compilerOptions.baseUrl !== '.') {
      console.log('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ baseUrl –≤ tsconfig.json');

      if (shouldFix) {
        tsConfig.compilerOptions.baseUrl = '.';
        hasChanges = true;
      }
    }

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (hasChanges && shouldFix) {
      fs.writeFileSync(tsConfigPath, JSON.stringify(tsConfig, null, 2), 'utf8');
      console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ –≤ tsconfig.json');
    } else if (!hasChanges) {
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ –≤ tsconfig.json –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
    }

    return hasChanges;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ tsconfig.json: ${error.message}`);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .eslintrc.js
function checkEslintConfig() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ .eslintrc.js...');

  const eslintConfigPath = path.join(ROOT_DIR, '.eslintrc.js');

  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    let eslintConfigContent = fs.readFileSync(eslintConfigPath, 'utf8');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª–æ no-restricted-imports
    const restrictedImportsPattern = /'no-restricted-imports':\s*\[\s*['"]warn['"]/;
    const hasRestrictedImportsRule = restrictedImportsPattern.test(eslintConfigContent);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
    const aliasWarningPatterns = [
      '@styles/*',
      '@app/*',
      '@features/*',
      '@entities/*',
      '@widgets/*',
      '@lib/*',
      '@shared/*',
      '@domain/*',
    ];

    let hasAllAliasWarnings = true;
    for (const pattern of aliasWarningPatterns) {
      if (!eslintConfigContent.includes(`'${pattern}'`)) {
        hasAllAliasWarnings = false;
        break;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
    const correctMessage =
      "–ò–º–ø–æ—Ä—Ç—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å '@/' (–ø—Ä–∏–º–µ—Ä: '@/styles/*' –≤–º–µ—Å—Ç–æ '@styles/*')";
    const hasCorrectMessage = eslintConfigContent.includes(correctMessage);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≥–ª—É–±–æ–∫–∏—Ö –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    const hasDeepRelativeRule = eslintConfigContent.includes("'../../../*'");

    let hasChanges = false;

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–º–ø–æ—Ä—Ç–æ–≤, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
    if (
      !hasRestrictedImportsRule ||
      !hasAllAliasWarnings ||
      !hasCorrectMessage ||
      !hasDeepRelativeRule
    ) {
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ .eslintrc.js');

      if (shouldFix) {
        // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ no-restricted-imports
        if (
          !hasRestrictedImportsRule ||
          !hasAllAliasWarnings ||
          !hasCorrectMessage ||
          !hasDeepRelativeRule
        ) {
          const noRestrictedImportsRule = `
    // –ó–∞–ø—Ä–µ—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –±–µ–∑ –∞–ª–∏–∞—Å–∞ @/
    'no-restricted-imports': [
      'warn',
      {
        patterns: [
          {
            group: [
              '@styles/*',
              '@app/*',
              '@features/*',
              '@entities/*',
              '@widgets/*',
              '@lib/*',
              '@shared/*',
              '@domain/*',
            ],
            message: "–ò–º–ø–æ—Ä—Ç—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å '@/' (–ø—Ä–∏–º–µ—Ä: '@/styles/*' –≤–º–µ—Å—Ç–æ '@styles/*')",
          },
          {
            group: ['../../../*'],
            message: "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–ª—É–±–æ–∫–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª–∏–∞—Å—ã —Å '@/'",
          },
        ],
      },
    ],`;

          // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ
          const ruleRegex = /'no-restricted-imports':\s*\[[\s\S]*?\],/;
          if (ruleRegex.test(eslintConfigContent)) {
            eslintConfigContent = eslintConfigContent.replace(ruleRegex, noRestrictedImportsRule);
          } else {
            // –ï—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –ø–µ—Ä–µ–¥ import/no-absolute-path
            eslintConfigContent = eslintConfigContent.replace(
              /'import\/no-absolute-path':/,
              `${noRestrictedImportsRule}\n\n    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤\n    'import/no-absolute-path':`,
            );
          }

          hasChanges = true;
        }

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if (hasChanges) {
          fs.writeFileSync(eslintConfigPath, eslintConfigContent, 'utf8');
          console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ .eslintrc.js');
        }
      }
    } else {
      console.log('‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ .eslintrc.js –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
    }

    return hasChanges;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ .eslintrc.js: ${error.message}`);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ jsconfig.json (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
function checkJsConfig() {
  const jsConfigPath = path.join(ROOT_DIR, 'jsconfig.json');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
  if (!fs.existsSync(jsConfigPath)) {
    return false;
  }

  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–ª–∏–∞—Å–æ–≤ –≤ jsconfig.json...');

  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const jsConfigContent = fs.readFileSync(jsConfigPath, 'utf8');
    let jsConfig;

    try {
      jsConfig = JSON.parse(jsConfigContent);
    } catch (parseError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ jsconfig.json: ${parseError.message}`);
      return false;
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ paths, —Å–æ–∑–¥–∞–µ–º –µ—ë
    if (!jsConfig.compilerOptions) {
      jsConfig.compilerOptions = {};
    }

    if (!jsConfig.compilerOptions.paths) {
      jsConfig.compilerOptions.paths = {};
    }

    let hasChanges = false;
    const paths = jsConfig.compilerOptions.paths;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –æ–∂–∏–¥–∞–µ–º—ã–π –∞–ª–∏–∞—Å
    for (const alias of EXPECTED_ALIASES) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∞–ª–∏–∞—Å–∞
      const hasCorrectAlias =
        paths[alias.name] &&
        Array.isArray(paths[alias.name]) &&
        paths[alias.name].includes(alias.path);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ—á–Ω–æ–≥–æ –∞–ª–∏–∞—Å–∞ (–±–µ–∑ —Å–ª–µ—à–∞ –ø–æ—Å–ª–µ @)
      const wrongAlias = alias.name.replace('@/', '@');
      const hasWrongAlias = paths[wrongAlias] !== undefined;

      if (!hasCorrectAlias || hasWrongAlias) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–ª–∏–∞—Å–æ–º ${alias.name} –≤ jsconfig.json`);

        if (shouldFix) {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–ª–∏–∞—Å
          paths[alias.name] = [alias.path];

          // –£–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–ª–∏–∞—Å, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if (hasWrongAlias) {
            delete paths[wrongAlias];
          }

          hasChanges = true;
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ baseUrl
    if (!jsConfig.compilerOptions.baseUrl || jsConfig.compilerOptions.baseUrl !== '.') {
      console.log('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ baseUrl –≤ jsconfig.json');

      if (shouldFix) {
        jsConfig.compilerOptions.baseUrl = '.';
        hasChanges = true;
      }
    }

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (hasChanges && shouldFix) {
      fs.writeFileSync(jsConfigPath, JSON.stringify(jsConfig, null, 2), 'utf8');
      console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ –≤ jsconfig.json');
    } else if (!hasChanges) {
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ –≤ jsconfig.json –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
    }

    return hasChanges;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ jsconfig.json: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log(`üîç ${shouldFix ? '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' : '–ü—Ä–æ–≤–µ—Ä–∫–∞'} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–ª–∏–∞—Å–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ...`);

  const tsConfigChanged = checkTsConfig();
  const eslintConfigChanged = checkEslintConfig();
  const jsConfigChanged = checkJsConfig();

  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');

  if (shouldFix) {
    if (tsConfigChanged || eslintConfigChanged || jsConfigChanged) {
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å:');
      console.log('   pnpm fix:imports --fix   - –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤');
      console.log('   pnpm lint              - –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    } else {
      console.log('‚ÑπÔ∏è –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã, –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è');
    }
  } else if (!tsConfigChanged && !eslintConfigChanged && !jsConfigChanged) {
    console.log('‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–∏–∞—Å–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
  } else {
    console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–ª–∏–∞—Å–æ–≤');
    console.log('\nüí° –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
    console.log('   pnpm sync-aliases --fix');
  }
}

main();
